;----------------------------------------------------------------------------
; Copyright (C) 2006 Arturo Ragozini and Daniel Vik
;
; This software is provided 'as-is', without any express or implied
; warranty. In no event will the authors be held liable for any damages
; arising from the use of this software.
;
; Permission is granted to anyone to use this software for any purpose,
; including commercial applications, and to alter it and redistribute it
; freely, subject to the following restrictions:
;
; 1. The origin of this software must not be misrepresented; you must not
; claim that you wrote the original software. If you use this software
; in a product, an acknowledgment in the product documentation would be
; appreciated but is not required.
; 2. Altered source versions must be plainly marked as such, and must not be
; misrepresented as being the original software.
; 3. This notice may not be removed or altered from any source distribution.
;----------------------------------------------------------------------------

; Modified in 2016 by Maxim for operation on Sega 8-bit consoles (and similar 
; hardware with IO-mapped SN76489 variants)

;
; Replayer core to play packed-volume 44kHz samples generated by pcmenc
;
; pcmenc should use the following command line arguments:
;
; pcmenc -rto 3 -p 4 -dt1 81 -dt2 81 -dt3 82 file.wav
;
; and optionally -r to split sample into blocks for rom replayer
;

; There is one channel update per underlying sample.
; We emit three channel updates, as evenly spaced as possible, looping
; every 244 cycles, to match an underlying sample at 44011Hz

;-------------------------------------
; Plays one sample
; HL - pointes to triplet count followed by data
;-------------------------------------
PLAY_SAMPLE:
  ld c, (hl)
  inc hl
  ld b, (hl)
  inc hl
  
.macro GetHi
  ld a,(hl)       ; 7
  .repeat 4
  rra             ; 16
  .endr
  and $0f         ; 7
.endm             ; Total 30

.macro GetLo
  ld a,(hl)       ; 7
  inc hl          ; 6
  and $0f         ; 7
.endm             ; Total 20

.macro PlayHi args channel
  GetHi           ; 30
  or (channel << 5) | $90 ; 7
  out ($7f),a     ; 11 -> 48
.endm

.macro PlayLo args channel
  GetLo           ; 20
  or (channel << 5) | $90 ; 7
  out ($7f),a     ; 11 -> 38
.endm

.macro colour
.endm

PsgLoop:
  PlayHi 0        ;  48 -> 82

  call Delay43    ;  43
  PlayLo 1        ;  38 -> 81
  
.ifdef colours
  ld a,$10
  out ($bf),a
  nop
  GetHi           ; 30
  out ($be),a     ; 11
  inc (hl)        ; 11
  dec (hl)        ; 11
  or (2 << 5) | $90 ; 7
  out ($7f),a     ; 11 -> 81
.else
  call Delay33    ;  33
  PlayHi 2        ;  48 -> 81
.endif

  dec bc          ;   6
  ld a,b          ;   4
  or c            ;   4
  ret z           ;   5
  ; Delay 25, don't touch bchl
  ld r,a          ;   9
  ld r,a          ;   9
  ld a,0          ;   7
  PlayLo 0        ;  38 -> 82
  
.ifdef colours
  ld a,$10
  out ($bf),a
  nop
  GetHi           ; 30
  out ($be),a     ; 11
  inc (hl)        ; 11
  dec (hl)        ; 11
  or (1 << 5) | $90 ; 7
  out ($7f),a     ; 11 -> 81
.else
  call Delay33    ;  33
  PlayHi 1        ;  48 -> 81
.endif
  
  call Delay43    ;  43
  PlayLo 2        ;  38 -> 81

  jp +            ;  10 (mini-delay)
+:dec bc          ;   6
  ld a,b          ;   4
  or c            ;   4
  jp nz, PsgLoop  ;  10

  ret

Delay43:
  jp Delay33  ; 10
Delay33:
  ; call      ; 17
  inc de      ;  6
  ret         ; 10
