; Replayer core to play packed-volume 66288kHz samples generated by pcmenc
;
; pcmenc should use the following command line arguments:
;
; pcmenc -rto 3 -p 4 -dt1 54 -dt2 54 -dt3 54 file.wav
;
; and optionally -r 16 to split sample into 16KB blocks
;

; There is one channel update per underlying sample.
; We emit three channel updates, as evenly spaced as possible, every 54 cycles, to match an underlying sample at 66288Hz

;-------------------------------------
; Plays one sample
; HL - points to triplet count followed by data
;-------------------------------------
PLAY_SAMPLE:
  ; the first 16 bits are the "sample count" - as this is for -rto 3, it is the number of outputs divided by 3
  ; e.g. 16KB can hold 10921 sets of three nibbles.
  ld c, (hl)
  inc hl
  ld b, (hl)
  inc hl
  
.macro Delay args cycles
  .if cycles == 16
  neg ; 8
  neg ; 8
  .endif
  .if cycles == 12
  jr + ; 12
  +:
  .endif
  .if cycles == 9
  ld a,i ; 9
  .endif
  .if cycles == 6
  dec de ; 6
  .endif
.endm

PsgLoop:
  ; We unroll x6 because we need to alternate low/high
  ; bc is the number of times we output to all three channels
  ; TODO: could allow only multiples of 6 bytes to make loop middle check unnecessary
  ; TODO: could allow only multiples of 66 bytes to make loop variable fit in 8 bits, with lots of unrolling
  
                            ; 18 loop time
  ld a,(0 << 5) | $90       ;  7
  rld                       ; 18
  out ($7f),a               ; 11 -> 54

  Delay                       16
  ld a,(hl)                 ;  7
  inc hl                    ;  6
  and $f                    ;  7
  or (1 << 5) | $90         ;  7
  out ($7f),a               ; 11 -> 54

  Delay                       12
  dec bc                    ;  6
  ld a,(2 << 5) | $90       ;  7
  rld                       ; 18
  out ($7f),a               ; 11 -> 54

  Delay                        9
  ld a,b                    ;  4
  or c                      ;  4
  ret z                     ;  5
  ld a,(hl)                 ;  7
  and $f                    ;  7
  or (0 << 5) | $90         ;  7
  out ($7f),a               ; 11 -> 54
  
  Delay                        6
  inc hl                    ;  6
  dec bc                    ;  6
  ld a,(1 << 5) | $90       ;  7
  rld                       ; 18
  out ($7f),a               ; 11 -> 54
  
  Delay                       16
  ld a,(hl)                 ;  7
  inc hl                    ;  6
  and $f                    ;  7
  or (2 << 5) | $90         ;  7
  out ($7f),a               ; 11 -> 54

  ld a,b                    ;  4
  or c                      ;  4
  jp nz, PsgLoop            ; 10

